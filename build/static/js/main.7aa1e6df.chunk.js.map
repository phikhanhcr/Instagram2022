{"version":3,"sources":["config/common.ts","utils/jwt.js","redux/selector/selector.js","component/Loading/Loading.jsx","routes/ProtectedRoute.jsx","routes/RouteComponent.jsx","App.js","reportWebVitals.js","redux/store.js","index.js","customHooks/useAuthentication.js","redux/features/user/userSlice.js","redux/features/notification/notificationSlice.js","redux/features/post/postSlice.js","redux/features/comment/commentSlice.js","redux/features/detailPost/detailPost.js","customHooks/useNotify.js","redux/features/message/messageSlice.js","redux/features/conversation/conversationSlice.js"],"names":["BASE_API_BACKEND","API_UPDATE_IMAGES","isValidToken","accessToken","jwtDecode","exp","currentTime","Date","now","refreshToken","window","localStorage","getItem","axios","post","headers","response","json","data","msg","setSession","token","setItem","removeItem","postSelector","state","detailPostSelector","detailPost","commentSelector","comment","notificationSelector","notification","messageSelector","message","conversationSelector","conversation","Loading","divRef","useRef","useEffect","current","style","width","ref","className","ProtectedRoute","useAuthentication","isAuthenticated","to","ViewCommentMobile","React","lazy","ForgotPassword","DetailPost","StoryPage","Discover","Profile","Setting","Direct","SignIn","Login","Home","RouteComponent","element","path","exact","App","document","title","isLoading","initialize","isInitialized","initializeNotify","useNotify","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","limit","pauseOnFocusLoss","draggable","pauseOnHover","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","user","userReducer","postReducer","detailPostReducer","commentReducer","notificationReducer","messageReducer","conversationReducer","store","configureStore","reducer","socket","io","ReactDOM","render","getElementById","AuthFunctions","userInit","createAsyncThunk","_","dispatch","getState","rejectWithValue","INITIALIZE","JSON","parse","auth","emit","connect","userLogin","userInfo","status","LOGIN","userRegister","useDispatch","useSelector","login","useCallback","register","logout","LOGOUT","userSlice","createSlice","name","initialState","hasError","notifications","newMessages","newNotification","reducers","action","payload","extraReducers","pending","fulfilled","toast","success","username","email","rejected","error","actions","namespace","getNotificationAsyncThunk","signal","get","INITIALIZE_NOTIFICATION","markAllReadNotificationAsyncThunk","MARK_ALL_READ","checkNewNotifyInitialized","CHECK_NEW_NOTIFY","NotifyFunction","isLoadingNotify","statusNotify","checkNewNotify","notificationSlice","LOGOUT_SET_NOTIFY","ADD_NOTIFY_REALTIME","push","map","ele","seen","createPostAsync","body","CREATE_POST","getPostByUserId","userId","GET_POST_BY_USER_ID","postInit","INITIALIZE_POST","postDiscover","config","GET_DISCOVER_POST","PostFunction","checkUploadSuccess","postByUserID","discoverPost","initializeNewFeedPost","postSlice","unshift","LOGOUT_SET_POST","createCommentAsync","comment_root_id","reply_to","CREATE_COMMENT_REPLIED","CREATE_COMMENT","commentAsyncIdPost","idPost","INITIALIZE_COMMENT","CommentFunction","commentSlice","idLoadingCreate","_id","comment_replied_count","comment_replied","comment_id","content","user_id","user_commented_id","avatar","isLoadingCreate","eachPostInit","post_id","INITIALIZE_DETAIL_POST","EACH_POST_FUNCTION","initializeDetailPost","promise","abort","eachPostSlice","getMessagesAsyncById","conversationId","GET_MESSAGE_BY_ID","MessageFunction","method","lastMessageDate","messages","messageSlice","getConversationsAsyncById","GET_CONVERSATION_BY_ID","ConversationFunction","conversations","conversationSlice"],"mappings":"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","file":"static/js/main.7aa1e6df.chunk.js","sourcesContent":["// export const BASE_API_BACKEND = \"http://localhost:3001\";\nexport const BASE_API_BACKEND = \"/\";\nexport const API_UPDATE_IMAGES =\n  \"https://api.cloudinary.com/v1_1/pklevi/image/upload\";\n","import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { BASE_API_BACKEND } from \"../config/common\";\n\nconst isValidToken = async (accessToken) => {\n  if (!accessToken) {\n    return false;\n  }\n\n  const { exp } = jwtDecode(accessToken);\n\n  const currentTime = Date.now() / 1000;\n\n  const isValid = exp > currentTime;\n\n  if (!isValid) {\n    const refreshToken = window.localStorage.getItem(\"refreshToken\");\n    const response = await axios.post(\n      `${BASE_API_BACKEND}/api/auth/get-access-token`,\n      {\n        refreshToken,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    if (data.msg === \"oke\") {\n      setSession(data.token, data.refreshToken);\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst setSession = (accessToken, refreshToken) => {\n  if (accessToken && refreshToken) {\n    localStorage.setItem(\"accessToken\", accessToken);\n    localStorage.setItem(\"refreshToken\", refreshToken);\n    // axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n  } else {\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"refreshToken\");\n    // delete axios.defaults.headers.common.Authorization;\n  }\n};\n\nexport { isValidToken, setSession };\n","export const userSelector = state => state.user;\nexport const postSelector = state => state.post;\nexport const detailPostSelector = state => state.detailPost;\nexport const commentSelector = state => state.comment;\nexport const commentRepliedSelector = state => state.comment_replied;\nexport const notificationSelector = state => state.notification;\nexport const messageSelector = state => state.message;\nexport const conversationSelector = state => state.conversation;","import { useEffect, useRef } from \"react\";\nimport \"./Loading.css\";\n\nfunction Loading() {\n  const divRef = useRef();\n  useEffect(() => {\n    divRef.current.style.width = \"100vw\";\n  }, []);\n\n  return (\n    <div>\n      <div\n        ref={divRef}\n        className=\"fixed top-0 left-0 h-[3px] w-[1px] bg-gray-700 transition-all duration-700 line_loading z-[100]\"\n      ></div>\n    </div>\n  );\n}\nexport default Loading;\n","import { Navigate, Outlet } from \"react-router-dom\";\nimport useAuthentication from \"../customHooks/useAuthentication\";\n\nfunction ProtectedRoute() {\n  const { isAuthenticated } = useAuthentication();\n  return isAuthenticated ? <Outlet /> : <Navigate to={\"/login\"}/> \n}\n\nexport default ProtectedRoute;","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n// import PageNotFound from \"../component/PageNotFount/PageNotFound\";\nimport ProtectedRoute from \"./ProtectedRoute\";\n// import CheckAuthLogin from \"./RequireAuth\";\n\nconst ViewCommentMobile = React.lazy(() =>\n  import(\"../component/DetailPost/Version/Mobile/ViewComment/ViewComment\")\n);\nconst ForgotPassword = React.lazy(() =>\n  import(\"../component/ForgotPassword/ForgotPassword\")\n);\nconst DetailPost = React.lazy(() =>\n  import(\"../component/DetailPost/DetailPost\")\n);\nconst StoryPage = React.lazy(() => import(\"../component/StoryPage/StoryPage\"));\nconst Discover = React.lazy(() => import(\"../component/Discover/Discover\"));\nconst Profile = React.lazy(() => import(\"../component/Profile/Profile\"));\nconst Setting = React.lazy(() => import(\"../component/Setting/Setting\"));\nconst Direct = React.lazy(() => import(\"../component/Direct/Direct\"));\nconst SignIn = React.lazy(() => import(\"../component/SignIn/SignIn\"));\nconst Login = React.lazy(() => import(\"../component/Login/Login\"));\nconst Home = React.lazy(() => import(\"../component/Home/Home\"));\n\nfunction RouteComponent() {\n  return (\n    <>\n      <>\n        <Routes>\n          <Route element={<ProtectedRoute />}>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/direct/inbox\" element={<Direct />}>\n              <Route path=\":userId\" element={<Direct />} />\n            </Route>\n            <Route path=\"/explore\" element={<Discover />} />\n            <Route path=\"/profile\" element={<Profile />} />\n            <Route path=\"/story\" element={<StoryPage />} />\n            <Route path=\"/post/view/:idPost\" exact element={<DetailPost />} />\n            <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n            <Route path=\"/settings\" element={<Setting />} />\n            <Route\n              path=\"/post/comment/:idPost\"\n              element={<ViewCommentMobile />}\n            />\n          </Route>\n        </Routes>\n      </>\n      <Routes>\n        {/* <Route element={<CheckAuthLogin />}> */}\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<SignIn />} />\n        {/* </Route> */}\n      </Routes>\n      {/* <Routes>\n        <Route path=\"*\" element={<PageNotFound>Alo ALo</PageNotFound>}></Route>\n      </Routes> */}\n    </>\n  );\n}\n\nexport default RouteComponent;\n","import React, { useEffect, Suspense } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Loading from './component/Loading/Loading';\nimport useAuthentication from './customHooks/useAuthentication';\nimport useNotify from './customHooks/useNotify';\nimport RouteComponent from './routes/RouteComponent';\n\nfunction App() {\n  useEffect(() => {\n    document.title = \"Instagram\"\n  }, [])\n\n  const { isLoading, initialize, isInitialized } = useAuthentication();\n  const { initializeNotify } = useNotify()\n  useEffect(() => {\n    initialize();\n  }, [initialize])\n\n  useEffect(() => {\n    initializeNotify();\n  }, [initializeNotify])\n\n  return (\n    <>\n      {\n        isInitialized && (\n          <>\n            {\n              isLoading ? <Loading /> : \"\"\n            }\n            <ToastContainer\n              position=\"top-right\"\n              autoClose={3000}\n              hideProgressBar={false}\n              newestOnTop={false}\n              closeOnClick\n              rtl={false}\n              limit={2}\n              pauseOnFocusLoss={false}\n              draggable\n              pauseOnHover={false}\n            />\n            <Suspense fallback={\n              <Loading />\n            }>\n              <RouteComponent />\n            </Suspense>\n          </>)\n      }\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport postReducer from \"./features/post/postSlice\";\nimport userReducer from \"./features/user/userSlice\";\nimport detailPostReducer from \"./features/detailPost/detailPost\";\nimport commentReducer from './features/comment/commentSlice';\nimport notificationReducer from './features/notification/notificationSlice';\nimport messageReducer from './features/message/messageSlice';\nimport conversationReducer from './features/conversation/conversationSlice'\nconst rootReducer = {\n  user: userReducer,\n  post: postReducer,\n  detailPost: detailPostReducer,\n  comment: commentReducer,\n  notification : notificationReducer,\n  message : messageReducer,\n  conversation : conversationReducer\n}\n\nconst store = configureStore({\n  reducer: rootReducer\n})\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./assert/tailwind/build/styleTailwind.css\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { io } from \"socket.io-client\";\nexport const socket = io(\"http://localhost:3001\");\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { AuthFunctions } from \"../redux/features/user/userSlice\";\n\nconst useAuthentication = () => AuthFunctions();\n\nexport default useAuthentication;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSession, isValidToken } from \"../../../utils/jwt\";\nimport { toast } from \"react-toastify\";\nimport { useCallback } from \"react\";\n\nimport { socket } from \"../../../index\";\nimport { BASE_API_BACKEND } from \"../../../config/common\";\nimport axios from \"axios\";\nconst initialState = {\n  user: {},\n  isAuthenticated: false,\n  isInitialized: false,\n  status: null,\n  isLoading: false,\n  hasError: false,\n  notifications: {\n    newMessages: 0,\n    newNotification: 0,\n  },\n};\n\n// ASYNC-FUNCTIONS-----------------------------------------------------------------\n\nconst userInit = createAsyncThunk(\n  \"user/init\",\n  async (_, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      if (accessToken && (await isValidToken(accessToken))) {\n        const response = await axios.post(\n          `${BASE_API_BACKEND}/api/get-user`,\n          {},\n          {\n            headers: {\n              \"x-auth-token\": window.localStorage.getItem(\"accessToken\"),\n            },\n          }\n        );\n        const { data } = response;\n        dispatch(\n          INITIALIZE({\n            isAuthenticated: true,\n            user: JSON.parse(data.user),\n          })\n        );\n        socket.auth = JSON.parse(data.user);\n        socket.emit(\"user-init\", JSON.parse(data.user));\n        socket.connect();\n      } else {\n        dispatch(\n          INITIALIZE({\n            isAuthenticated: false,\n            user: null,\n          })\n        );\n        return rejectWithValue(\"Session expired, plz login to go go go\");\n      }\n    } catch (err) {\n      dispatch(\n        INITIALIZE({\n          isAuthenticated: false,\n          user: null,\n        })\n      );\n    }\n  }\n);\n\nconst userLogin = createAsyncThunk(\n  \"user/login\",\n  async (userInfo, { dispatch, rejectWithValue }) => {\n    const response = await axios.post(`${BASE_API_BACKEND}/api/login`, {\n      ...userInfo,\n    });\n    const data = response.data;\n    if (response.status < 200 || response.status >= 300) {\n      return rejectWithValue(data.message);\n    }\n    setSession(data.token, data.refreshToken);\n    data.user = JSON.parse(data.user);\n    dispatch(userInit());\n    dispatch(LOGIN(data));\n  }\n);\n\nconst userRegister = createAsyncThunk(\n  \"user/register\",\n  async (userInfo, { dispatch, rejectWithValue }) => {\n    try {\n      const response = await axios.post(\n        `${BASE_API_BACKEND}/api/register`,\n        {\n          ...userInfo,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      const { data } = response;\n      //  Nếu bị lỗi thì reject\n      if (response.status < 200 || response.status >= 300) {\n        return rejectWithValue(data.message);\n      }\n      setSession(data.token, data.refreshToken);\n      data.user = JSON.parse(data.user);\n      dispatch(userInit());\n      dispatch(LOGIN(data));\n    } catch (error) {\n      return rejectWithValue(\"Something went wrong, please try another time\");\n    }\n  }\n);\n\n// AUTH-FUNCTIONS-----------------------------------------------------------------\n\nexport const AuthFunctions = () => {\n  const dispatch = useDispatch();\n  const { isAuthenticated, isInitialized, isLoading } = useSelector(\n    (state) => state.user\n  );\n  const user = useSelector((state) => (state.user.user ? state.user.user : {}));\n\n  const initialize = useCallback(() => {\n    dispatch(userInit());\n  }, [dispatch]);\n\n  const register = (userInfo) => {\n    dispatch(userRegister(userInfo));\n  };\n  const login = (userInfo) => {\n    dispatch(userLogin(userInfo));\n  };\n  const logout = () => {\n    dispatch(LOGOUT());\n  };\n\n  return {\n    login,\n    initialize,\n    register,\n    logout,\n    isAuthenticated,\n    isInitialized,\n    isLoading,\n    user,\n  };\n};\n\n// SLICE-----------------------------------------------------------------\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    LOGIN: (state, action) => {\n      state.user = action.payload.user;\n      state.isAuthenticated = true;\n    },\n    INITIALIZE: (state, action) => {\n      state.isAuthenticated = action.payload.isAuthenticated;\n      state.isInitialized = true;\n      state.user = action.payload.user;\n    },\n    LOGOUT: (state, action) => {\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"refreshToken\");\n      state.user = null;\n      state.isAuthenticated = false;\n    },\n  },\n  extraReducers: {\n    [userLogin.pending]: (state) => {\n      state.status = \"PENDING\";\n      state.isLoading = true;\n    },\n    [userLogin.fulfilled]: (state) => {\n      state.status = \"SUCCESS\";\n      state.isLoading = false;\n      // userSocket.emit(\"sign-in\", state.user._id);\n      toast.success(\n        `Welcome back, ${\n          state.user.username ? state.user.username : state.user.email\n        } 🔥🔥`\n      );\n    },\n    [userLogin.rejected]: (state, action) => {\n      state.status = \"FAILED\";\n      state.isLoading = false;\n      toast.error(action?.payload);\n    },\n\n    [userInit.pending]: (state, action) => {\n      state.status = \"PENDING\";\n      state.isLoading = true;\n    },\n    [userInit.fulfilled]: (state, action) => {\n      state.status = \"SUCCESS\";\n      state.isLoading = false;\n    },\n    [userInit.rejected]: (state, action) => {\n      state.status = \"FAILED\";\n      state.isLoading = false;\n      toast.error(action?.payload);\n    },\n  },\n});\n\nexport { userLogin, userRegister };\n\nexport const { LOGIN, INITIALIZE, LOGOUT } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BASE_API_BACKEND } from \"../../../config/common\";\nimport { isValidToken } from \"../../../utils/jwt\";\nimport { notificationSelector } from \"../../selector/selector\";\n\nconst initialState = {\n  notifications: [],\n  isLoadingNotify: false,\n  statusNotify: null,\n  checkNewNotify: false,\n};\nconst namespace = \"notification\";\n\n// NOTIFICATION-ASYNC THUNK-----------------------------------------------------------------\n\nexport const getNotificationAsyncThunk = createAsyncThunk(\n  `${namespace}/getMyNotify`,\n  async (_, { dispatch, rejectWithValue, signal }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      if (accessToken && (await isValidToken(accessToken))) {\n        const response = await axios.get(\n          `${BASE_API_BACKEND}/api/notification`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-auth-token\": window.localStorage.getItem(\"accessToken\"),\n            },\n            signal: signal,\n          }\n        );\n        const data = response.data;\n        if (data) {\n          dispatch(INITIALIZE_NOTIFICATION(data));\n        } else {\n          return rejectWithValue(\"Something went wrong\");\n        }\n      } else {\n        return rejectWithValue(\"Session expired, plz login to go go go\");\n      }\n    } catch (error) {\n      return rejectWithValue(\"Something went wrong\");\n    }\n  }\n);\n\nexport const markAllReadNotificationAsyncThunk = createAsyncThunk(\n  `${namespace}/markAllRead`,\n  async (_, { dispatch, rejectWithValue, signal }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      if (accessToken && (await isValidToken(accessToken))) {\n        const response = await axios.post(\n          `${BASE_API_BACKEND}/api/notification/markAllRead`,\n          {},\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-auth-token\": window.localStorage.getItem(\"accessToken\"),\n            },\n            signal: signal,\n          }\n        );\n        const data = response.data;\n        if (data) {\n          dispatch(MARK_ALL_READ());\n        } else {\n          return rejectWithValue(\"Something went wrong\");\n        }\n      } else {\n        return rejectWithValue(\"Session expired, plz login to go go go\");\n      }\n    } catch (error) {\n      return rejectWithValue(\"Something went wrong\");\n    }\n  }\n);\n\nexport const checkNewNotifyInitialized = createAsyncThunk(\n  `${namespace}/checkNewNotify`,\n  async (_, { dispatch, rejectWithValue, signal }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      if (accessToken && (await isValidToken(accessToken))) {\n        const response = await axios.post(\n          `${BASE_API_BACKEND}/api/notification/check-new`,\n          {},\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-auth-token\": window.localStorage.getItem(\"accessToken\"),\n            },\n            signal: signal,\n          }\n        );\n        const data = response.data;\n        if (data) {\n          dispatch(CHECK_NEW_NOTIFY(data.data));\n        } else {\n          return rejectWithValue(\"Something went wrong\");\n        }\n      } else {\n        return rejectWithValue(\"Session expired, plz login to go go go\");\n      }\n    } catch (error) {\n      return rejectWithValue(\"Something went wrong\");\n    }\n  }\n);\n\n// NOTIFICATION-SELECTOR-----------------------------------------------------------------\n\nexport const NotifyFunction = () => {\n  const dispatch = useDispatch();\n\n  const initializeNotify = useCallback(() => {\n    dispatch(checkNewNotifyInitialized());\n  }, [dispatch]);\n\n  const { notifications, isLoadingNotify, statusNotify, checkNewNotify } =\n    useSelector(notificationSelector);\n  return {\n    notifications,\n    isLoadingNotify,\n    statusNotify,\n    checkNewNotify,\n    initializeNotify,\n  };\n};\n\n// NOTIFICATION-SLICE-----------------------------------------------------------------\n\nconst notificationSlice = createSlice({\n  name: namespace,\n  initialState,\n  reducers: {\n    INITIALIZE_NOTIFICATION: (state, action) => {\n      state.notifications = action.payload;\n    },\n    LOGOUT_SET_NOTIFY: (state, action) => {\n      state.notifications = [];\n    },\n    ADD_NOTIFY_REALTIME: (state, action) => {\n      state.notifications.push(action.payload);\n    },\n    MARK_ALL_READ: (state) => {\n      state.notifications.map((ele) => ele.seen === true);\n      state.checkNewNotify = false;\n    },\n    CHECK_NEW_NOTIFY: (state, action) => {\n      state.checkNewNotify = action.payload;\n    },\n  },\n  extraReducers: {\n    [getNotificationAsyncThunk.pending]: (state) => {\n      state.statusNotify = \"PENDING\";\n      state.isLoadingNotify = true;\n    },\n    [getNotificationAsyncThunk.fulfilled]: (state) => {\n      state.isLoadingNotify = false;\n      state.statusNotify = \"SUCCESS\";\n    },\n    [getNotificationAsyncThunk.rejected]: (state) => {\n      state.statusNotify = \"FAILED\";\n      state.isLoadingNotify = false;\n    },\n    [checkNewNotifyInitialized.pending]: (state) => {\n      state.statusNotify = \"PENDING\";\n      state.isLoadingNotify = true;\n    },\n    [checkNewNotifyInitialized.fulfilled]: (state) => {\n      state.isLoadingNotify = false;\n      state.statusNotify = \"SUCCESS\";\n    },\n    [checkNewNotifyInitialized.rejected]: (state) => {\n      state.statusNotify = \"FAILED\";\n      state.isLoadingNotify = false;\n    },\n  },\n});\n\nexport const {\n  INITIALIZE_NOTIFICATION,\n  LOGOUT_SET_NOTIFY,\n  ADD_NOTIFY_REALTIME,\n  MARK_ALL_READ,\n  CHECK_NEW_NOTIFY,\n} = notificationSlice.actions;\n\nexport default notificationSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postSelector } from \"../../selector/selector\";\nimport { toast } from \"react-toastify\";\nimport { isValidToken } from \"../../../utils/jwt\";\nimport { BASE_API_BACKEND } from \"../../../config/common\";\nimport axios from \"axios\";\nconst initialState = {\n  post: [],\n  isLoading: false,\n  status: null,\n  checkUploadSuccess: false,\n  postByUserID: [],\n  discoverPost: [],\n};\nconst namespace = \"post\";\n\n// CREATE-POST-ASYNC THUNK-----------------------------------------------------------------\n\nexport const createPostAsync = createAsyncThunk(\n  `${namespace}/create`,\n  async (body, { dispatch, rejectWithValue }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      if (accessToken && (await isValidToken(accessToken))) {\n        const response = await axios.post(\n          `${BASE_API_BACKEND}/api/post/create`,\n          {\n            ...body,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-auth-token\": window.localStorage.getItem(\"accessToken\"),\n            },\n          }\n        );\n        const { data } = response;\n        if (data) {\n          dispatch(CREATE_POST(data));\n        } else {\n          return rejectWithValue(\"Can't upload file, try again with other\");\n        }\n      } else {\n        return rejectWithValue(\"Token expired\");\n      }\n    } catch (error) {\n      return rejectWithValue(\"Can't upload file, try again with other\");\n    }\n  }\n);\n\nexport const getPostByUserId = createAsyncThunk(\n  `${namespace}/get_post_by_user_id`,\n  async (userId, { dispatch, rejectWithValue, signal }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      if (accessToken && (await isValidToken(accessToken))) {\n        const response = await axios.post(\n          `${BASE_API_BACKEND}/api/post/posts/user`,\n          {\n            userId,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-auth-token\": window.localStorage.getItem(\"accessToken\"),\n            },\n            signal: signal,\n          }\n        );\n        const { data } = response;\n        dispatch(GET_POST_BY_USER_ID(data));\n      } else {\n        dispatch(GET_POST_BY_USER_ID([]));\n      }\n    } catch (error) {\n      dispatch(GET_POST_BY_USER_ID([]));\n    }\n  }\n);\n\n// POST-ASYNC THUNK-----------------------------------------------------------------\nexport const postInit = createAsyncThunk(\n  `${namespace}/init`,\n  async (_, { dispatch, signal }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      if (accessToken && (await isValidToken(accessToken))) {\n        const response = await axios.get(`${BASE_API_BACKEND}/api/post/feeds`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-auth-token\": window.localStorage.getItem(\"accessToken\"),\n          },\n        });\n        const { data } = response;\n\n        dispatch(\n          INITIALIZE_POST({\n            post: data,\n          })\n        );\n      } else {\n        dispatch(\n          INITIALIZE_POST({\n            post: [],\n          })\n        );\n      }\n    } catch (error) {\n      dispatch(\n        INITIALIZE_POST({\n          post: [],\n        })\n      );\n    }\n  }\n);\n\nexport const postDiscover = createAsyncThunk(\n  `${namespace}/discover`,\n  async (_, { dispatch, signal }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      if (accessToken && (await isValidToken(accessToken))) {\n        const config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-auth-token\": window.localStorage.getItem(\"accessToken\"),\n          },\n          signal: signal,\n        };\n        const response = await axios.get(\n          `${BASE_API_BACKEND}/api/post/feeds`,\n          config\n        );\n        const { data } = response;\n        dispatch(GET_DISCOVER_POST(data));\n      } else {\n        dispatch(GET_DISCOVER_POST([]));\n      }\n    } catch (error) {\n      dispatch(GET_DISCOVER_POST([]));\n    }\n  }\n);\n\n// POST-FUNCTIONS-----------------------------------------------------------------\n\nexport const PostFunction = () => {\n  const dispatch = useDispatch();\n  const {\n    post,\n    isLoading,\n    status,\n    checkUploadSuccess,\n    postByUserID,\n    discoverPost,\n  } = useSelector(postSelector);\n\n  const initializeNewFeedPost = useCallback(() => {\n    dispatch(postInit());\n  }, [dispatch]);\n\n  return {\n    post,\n    status,\n    isLoading,\n    discoverPost,\n    postByUserID,\n    checkUploadSuccess,\n    initializeNewFeedPost,\n  };\n};\n\n// POST-SLICE-----------------------------------------------------------------\n\nconst postSlice = createSlice({\n  name: namespace,\n  initialState,\n  reducers: {\n    INITIALIZE_POST: (state, action) => {\n      state.post = action.payload.post;\n    },\n    CREATE_POST: (state, action) => {\n      state.post.unshift(action.payload);\n    },\n    GET_POST_BY_USER_ID: (state, action) => {\n      state.postByUserID = action.payload;\n    },\n    GET_DISCOVER_POST: (state, action) => {\n      state.discoverPost = action.payload;\n    },\n    LOGOUT_SET_POST: (state) => {\n      state.post = [];\n      state.isLoading = false;\n      state.status = null;\n      state.checkUploadSuccess = false;\n      state.postByUserID = [];\n      state.discoverPost = [];\n    },\n  },\n  extraReducers: {\n    [postInit.pending]: (state) => {\n      state.status = \"PENDING\";\n      state.isLoading = true;\n    },\n    [postInit.fulfilled]: (state) => {\n      state.isLoading = false;\n      state.status = \"SUCCESS\";\n    },\n    [postInit.rejected]: (state) => {\n      state.status = \"FAILED\";\n      state.isLoading = false;\n    },\n    [createPostAsync.pending]: (state) => {\n      state.status = \"PENDING\";\n      state.checkUploadSuccess = false;\n      state.isLoading = true;\n    },\n    [createPostAsync.fulfilled]: (state) => {\n      state.checkUploadSuccess = true;\n      state.isLoading = false;\n      state.status = \"SUCCESS\";\n      toast.success(`Upload post successfully`);\n    },\n    [createPostAsync.rejected]: (state, action) => {\n      state.status = \"FAILED\";\n      state.isLoading = false;\n      state.checkUploadSuccess = false;\n      toast.error(action?.payload);\n    },\n    [getPostByUserId.pending]: (state) => {\n      state.status = \"PENDING\";\n      state.isLoading = true;\n    },\n    [getPostByUserId.fulfilled]: (state) => {\n      state.isLoading = false;\n      state.status = \"SUCCESS\";\n    },\n    [getPostByUserId.rejected]: (state, action) => {\n      state.status = \"FAILED\";\n      state.isLoading = false;\n    },\n    [postDiscover.pending]: (state) => {\n      state.status = \"PENDING\";\n      state.isLoading = true;\n    },\n    [postDiscover.fulfilled]: (state) => {\n      state.isLoading = false;\n      state.status = \"SUCCESS\";\n    },\n    [postDiscover.rejected]: (state, action) => {\n      state.status = \"FAILED\";\n      state.isLoading = false;\n    },\n  },\n});\n\nexport const {\n  GET_POST_BY_USER_ID,\n  INITIALIZE_POST,\n  CREATE_POST,\n  GET_DISCOVER_POST,\n  LOGOUT_SET_POST,\n} = postSlice.actions;\nexport default postSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { socket } from \"../../..\";\nimport { BASE_API_BACKEND } from \"../../../config/common\";\nimport { isValidToken } from \"../../../utils/jwt\";\nimport { commentSelector } from \"../../selector/selector\";\n\nconst initialState = {\n  comment: [],\n  isLoading: false,\n  status: null,\n  idLoadingCreate: false,\n};\n\nconst namespace = \"comment_by_id_post\";\n\nexport const createCommentAsync = createAsyncThunk(\n  `${namespace}/create`,\n  async (body, { dispatch, rejectWithValue }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      if (accessToken && (await isValidToken(accessToken))) {\n        const response = await axios.post(\n          `${BASE_API_BACKEND}/api/comment/create`,\n          {\n            ...body,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-auth-token\": window.localStorage.getItem(\"accessToken\"),\n            },\n          }\n        );\n\n        const { data } = response;\n        if (data) {\n          if (body.comment_root_id || body.reply_to) {\n            data.comment_root_id = body.comment_root_id;\n            dispatch(CREATE_COMMENT_REPLIED(data));\n            socket.emit(\"notify-comment_replied_on_post\", data);\n          } else {\n            dispatch(CREATE_COMMENT(data));\n            socket.emit(\"notify-comment_on_post\", data);\n          }\n        } else {\n          return rejectWithValue(\"Errors\");\n        }\n      } else {\n        return rejectWithValue(\"Something went wrong\");\n      }\n    } catch (error) {\n      return rejectWithValue(\"Errors\");\n    }\n  }\n);\n\nexport const commentAsyncIdPost = createAsyncThunk(\n  `${namespace}/init`,\n  async (idPost, { dispatch, signal }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      const response = await axios.get(\n        `${BASE_API_BACKEND}/api/comment/post/${idPost}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-auth-token\": accessToken,\n          },\n          signal: signal,\n        }\n      );\n      const { data } = response;\n      dispatch(\n        INITIALIZE_COMMENT({\n          comment: data.data,\n        })\n      );\n    } catch (error) {\n      dispatch(\n        INITIALIZE_COMMENT({\n          comment: null,\n        })\n      );\n    }\n  }\n);\n\nexport const CommentFunction = () => {\n  const { comment, isLoading, status } = useSelector(commentSelector);\n  return {\n    comment,\n    isLoading,\n    status,\n  };\n};\n\n// COMMENT_SLICE-----------------------------------------------------------------\nconst commentSlice = createSlice({\n  name: namespace,\n  initialState,\n  reducers: {\n    INITIALIZE_COMMENT: (state, action) => {\n      state.comment = action.payload.comment;\n    },\n    CREATE_COMMENT: (state, action) => {\n      state.comment.push(action.payload);\n    },\n    CREATE_COMMENT_REPLIED: (state, action) => {\n      state.comment.map((ele) => {\n        if (ele._id === action.payload.comment_root_id) {\n          return {\n            ...ele,\n            comment_replied_count: ele.comment_replied_count++,\n            comment_replied: ele.comment_replied.push({\n              comment_id: {\n                _id: action.payload._id,\n                content: action.payload.content,\n              },\n              user_id: action.payload.user_commented_id,\n              username: action.payload.username,\n              avatar: action.payload.avatar,\n              reply_to: {\n                user_id: action.payload.reply_to._id,\n                username: action.payload.reply_to.username,\n              },\n            }),\n          };\n        }\n        return ele;\n      });\n    },\n  },\n  extraReducers: {\n    [commentAsyncIdPost.pending]: (state) => {\n      state.status = \"PENDING\";\n      state.isLoading = true;\n    },\n    [commentAsyncIdPost.fulfilled]: (state) => {\n      state.isLoading = false;\n      state.status = \"SUCCESS\";\n    },\n    [commentAsyncIdPost.rejected]: (state) => {\n      state.status = \"FAILED\";\n      state.isLoading = false;\n    },\n    [createCommentAsync.pending]: (state) => {\n      state.status = \"PENDING\";\n      state.isLoadingCreate = true;\n    },\n    [createCommentAsync.fulfilled]: (state) => {\n      state.isLoadingCreate = false;\n      state.status = \"SUCCESS\";\n    },\n    [createCommentAsync.rejected]: (state) => {\n      state.status = \"FAILED\";\n      state.isLoadingCreate = false;\n    },\n  },\n});\n\nexport const { INITIALIZE_COMMENT, CREATE_COMMENT, CREATE_COMMENT_REPLIED } =\n  commentSlice.actions;\n\nexport default commentSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BASE_API_BACKEND } from \"../../../config/common\";\nimport { isValidToken } from \"../../../utils/jwt\";\nimport { detailPostSelector } from \"../../selector/selector\";\n\nconst namespace = \"detail_post\";\n\nexport const eachPostInit = createAsyncThunk(\n  `${namespace}/init`,\n  async (post_id, { dispatch, rejectWithValue, signal }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      if (accessToken && (await isValidToken(accessToken))) {\n        const response = await axios.get(\n          `${BASE_API_BACKEND}/api/post/one/${post_id}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-auth-token\": window.localStorage.getItem(\"accessToken\"),\n            },\n            signal: signal,\n          }\n        );\n        const data = response.data;\n        dispatch(\n          INITIALIZE_DETAIL_POST({\n            post: data,\n          })\n        );\n      } else {\n        return rejectWithValue(\"Something went wrong\");\n      }\n    } catch (error) {\n      dispatch(\n        INITIALIZE_DETAIL_POST({\n          post: null,\n        })\n      );\n    }\n  }\n);\n\nconst initialState = {\n  post: {},\n  isLoading: false,\n  status: null,\n};\n\nexport const EACH_POST_FUNCTION = () => {\n  const dispatch = useDispatch();\n  const { post, isLoading, status } = useSelector(detailPostSelector);\n\n  const initializeDetailPost = useCallback(() => {\n    const promise = dispatch(eachPostInit());\n    return () => {\n      promise.abort();\n    };\n  }, [dispatch]);\n\n  return {\n    post,\n    isLoading,\n    status,\n    initializeDetailPost,\n  };\n};\n\nconst eachPostSlice = createSlice({\n  name: namespace,\n  initialState,\n  reducers: {\n    INITIALIZE_DETAIL_POST: (state, action) => {\n      state.post = action.payload.post;\n    },\n  },\n  extraReducers: {\n    [eachPostInit.pending]: (state) => {\n      state.isLoading = true;\n      state.status = \"PENDING\";\n    },\n    [eachPostInit.fulfilled]: (state) => {\n      state.isLoading = false;\n      state.status = \"SUCCESS\";\n    },\n    [eachPostInit.rejected]: (state) => {\n      state.isLoading = false;\n      state.status = \"FAILED\";\n    },\n  },\n});\n\nexport const { INITIALIZE_DETAIL_POST } = eachPostSlice.actions;\n\nexport default eachPostSlice.reducer;\n","import { NotifyFunction } from \"../redux/features/notification/notificationSlice\";\n\n\nconst useNotify = () => NotifyFunction();\n\nexport default useNotify;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { socket } from \"../../..\";\nimport { BASE_API_BACKEND } from \"../../../config/common\";\nimport { isValidToken } from \"../../../utils/jwt\";\nimport { messageSelector } from \"../../selector/selector\";\n\nconst initialState = {\n  messages: [],\n  isLoading: false,\n  status: null,\n};\n\nconst namespace = \"message\";\n\nexport const getMessagesAsyncById = createAsyncThunk(\n  `${namespace}/by_id`,\n  async (conversationId, { dispatch, signal, rejectWithValue }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      // need to check if invalid token\n      if (accessToken && (await isValidToken(accessToken))) {\n        const response = await axios.get(\n          `${BASE_API_BACKEND}/api/get-messages/${conversationId}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-auth-token\": window.localStorage.getItem(\"accessToken\"),\n            },\n            signal: signal,\n          }\n        );\n        const data = response.data;\n        // dispatch an action\n        dispatch(GET_MESSAGE_BY_ID(data));\n      } else {\n        return rejectWithValue(\"Token expired\");\n      }\n    } catch (error) {\n      return rejectWithValue(\"Something went wrong.......\");\n    }\n  }\n);\n\nexport const loadMoreMessages = createAsyncThunk(\n  `${namespace}/load-more-message`,\n  async (data, { dispatch, signal, rejectWithValue }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      // need to check if invalid token\n      if (accessToken && (await isValidToken(accessToken))) {\n        const response = await axios.get(\n          `${BASE_API_BACKEND}/api/get-more-messages/${data.conversationId}`,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-auth-token\": window.localStorage.getItem(\"accessToken\"),\n            },\n            body: data.lastMessageDate,\n            signal: signal,\n          }\n        );\n        const data = response.data;\n        // dispatch an action\n      } else {\n        return rejectWithValue(\"Token expired\");\n      }\n    } catch (error) {\n      return rejectWithValue(\"Something went wrong.......\");\n    }\n  }\n);\n\nexport const MessageFunction = () => {\n  const { messages, isLoading, status } = useSelector(messageSelector);\n  return {\n    messages,\n    isLoading,\n    status,\n  };\n};\n\n// message_SLICE-----------------------------------------------------------------\nconst messageSlice = createSlice({\n  name: namespace,\n  initialState,\n  reducers: {\n    GET_MESSAGE_BY_ID: (state, action) => {\n      state.messages = action.payload;\n    },\n  },\n  extraReducers: {\n    [getMessagesAsyncById.pending]: (state) => {\n      state.status = \"PENDING\";\n      state.isLoading = true;\n    },\n    [getMessagesAsyncById.fulfilled]: (state) => {\n      state.isLoading = false;\n      state.status = \"SUCCESS\";\n    },\n    [getMessagesAsyncById.rejected]: (state) => {\n      state.status = \"FAILED\";\n      state.isLoading = false;\n    },\n  },\n});\n\nexport const { GET_MESSAGE_BY_ID } = messageSlice.actions;\n\nexport default messageSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { socket } from \"../../..\";\nimport { BASE_API_BACKEND } from \"../../../config/common\";\nimport { isValidToken } from \"../../../utils/jwt\";\nimport { conversationSelector } from \"../../selector/selector\";\n\nconst initialState = {\n  conversations: [],\n  isLoading: false,\n};\n\nconst namespace = \"conversation\";\n\nexport const getConversationsAsyncById = createAsyncThunk(\n  `${namespace}/by_id`,\n  async (_, { dispatch, signal, rejectWithValue }) => {\n    try {\n      const accessToken = window.localStorage.getItem(\"accessToken\");\n      // need to check if invalid token\n      if (accessToken && (await isValidToken(accessToken))) {\n        const response = await axios.get(\n          `${BASE_API_BACKEND}/api/conversation/get`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-auth-token\": window.localStorage.getItem(\"accessToken\"),\n            },\n            signal: signal,\n          }\n        );\n        const data = response.data;\n        // dispatch an action\n        dispatch(GET_CONVERSATION_BY_ID(data));\n      } else {\n        return rejectWithValue(\"Token expired\");\n      }\n    } catch (error) {\n      return rejectWithValue(\"Something went wrong.......\");\n    }\n  }\n);\n\nexport const ConversationFunction = () => {\n  const { conversations, isLoading, status } =\n    useSelector(conversationSelector);\n  return {\n    conversations,\n    isLoading,\n    status,\n  };\n};\n\n// conversation_SLICE-----------------------------------------------------------------\nconst conversationSlice = createSlice({\n  name: namespace,\n  initialState,\n  reducers: {\n    GET_CONVERSATION_BY_ID: (state, action) => {\n      state.conversations = action.payload;\n    },\n  },\n  extraReducers: {\n    [getConversationsAsyncById.pending]: (state) => {\n      state.status = \"PENDING\";\n      state.isLoading = true;\n    },\n    [getConversationsAsyncById.fulfilled]: (state) => {\n      state.isLoading = false;\n      state.status = \"SUCCESS\";\n    },\n    [getConversationsAsyncById.rejected]: (state) => {\n      state.status = \"FAILED\";\n      state.isLoading = false;\n    },\n  },\n});\n\nexport const { GET_CONVERSATION_BY_ID } = conversationSlice.actions;\n\nexport default conversationSlice.reducer;\n"],"sourceRoot":""}